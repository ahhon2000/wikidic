#!/usr/bin/python3

import sys, os
from pathlib import Path
appPath = Path(__file__).parent.absolute()
sys.path = [str(appPath), str(appPath / '..')] + sys.path

from DictionaryApp import delLines, copyLines


ls = ['alpha', 'beta', 'alpha']

def delLinesLst(*arg):
    return list(delLines(*arg))
def copyLinesLst(*arg):
    return list(copyLines(*arg))

assert delLinesLst(ls, r'alpha', r'alpha') == [],    'delLinesLst'
assert delLinesLst(ls, r'alpha') == ['beta'],    'delLinesLst'
assert delLinesLst(ls, r'z') == ['alpha', 'beta', 'alpha'],    'delLinesLst'
assert delLinesLst(ls, 0, None) == [],    'delLinesLst'
assert delLinesLst(ls, 1, 1) == ['alpha', 'alpha'],    'delLinesLst'

assert copyLinesLst(ls, r'beta', r'alpha') == ['beta', 'alpha'],   'copyLinesLst'
assert copyLinesLst(ls, r'alpha', r'alpha') == ['alpha', 'beta', 'alpha'],   'copyLinesLst'

ls = ['alpha', 'beta', 'gamma', 'alpha', 'beta', 'gamma']
assert delLinesLst(ls, 'alpha', 'beta') == ['gamma', 'gamma'],    'delLinesLst'
assert delLinesLst(ls, 'alpha', None) == [],    'delLinesLst'

assert copyLinesLst(ls, 'alpha', 'beta') == ['alpha', 'beta', 'alpha', 'beta'],    'copyLinesLst'
assert copyLinesLst(ls, 'beta', None) == ['beta', 'gamma', 'alpha', 'beta', 'gamma'],    'copyLinesLst'
assert copyLinesLst(ls, 0, None) == ['alpha', 'beta', 'gamma', 'alpha', 'beta', 'gamma'],    'copyLinesLst'
assert copyLinesLst(ls, 2, 2) == ['gamma'],    'copyLinesLst'
